@model IEnumerable<BTKETicaretSitesi.Models.Order>

@{
    ViewData["Title"] = "Siparişlerim";
}

<div class="container mt-4">
    <h2>Siparişlerim</h2>

    @if (!Model.Any())
    {
        <div class="alert alert-info">
            Henüz siparişiniz bulunmamaktadır. <a href="@Url.Action("Index", "Home")">Alışverişe başlamak için tıklayın.</a>
        </div>
    }
    else
    {
        <div class="table-responsive">
            <table class="table table-bordered table-hover">
                <thead class="thead-light">
                    <tr>
                        <th>Sipariş No</th>
                        <th>Tarih</th>
                        <th>Durum</th>
                        <th>Toplam</th>
                        <th>İşlemler</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var order in Model)
                    {
                        <tr>
                            <td>@order.OrderNumber</td>
                            <td>@order.OrderDate.ToString("dd.MM.yyyy HH:mm")</td>
                            <td>
                                <span class="badge @GetStatusBadgeClass(order.Status)">
                                    @order.Status
                                </span>
                            </td>
                            <td>@((order.OrderTotal + order.ShippingFee + order.TaxAmount).ToString("C"))</td>
                            <td>
                                <a href="@Url.Action("Details", new { orderNumber = order.OrderNumber })"
                                   class="btn btn-sm btn-outline-primary">
                                    Detaylar
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>

@functions {
    string GetStatusBadgeClass(OrderStatus status)
    {
        return status switch
        {
            OrderStatus.Pending => "badge-secondary",
            OrderStatus.Processing => "badge-info",
            OrderStatus.Shipped => "badge-warning",
            OrderStatus.Delivered => "badge-success",
            OrderStatus.Cancelled => "badge-danger",
            OrderStatus.Refunded => "badge-dark",
            _ => "badge-light"
        };
    }
}