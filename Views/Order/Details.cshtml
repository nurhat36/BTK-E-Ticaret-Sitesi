@model BTKETicaretSitesi.Models.Order

@{
    ViewData["Title"] = "Sipariş Detayları";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-lg-8">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2 class="fw-bold text-gradient">Sipariş Detayları</h2>
                <span class="badge bg-light text-dark fs-6">@Model.OrderNumber</span>
            </div>

            <!-- Sipariş Bilgileri Kartı -->
            <div class="card mb-4 border-0 shadow-sm">
                <div class="card-header bg-white border-0 py-3">
                    <h5 class="mb-0 fw-semibold d-flex align-items-center">
                        <i class="fas fa-receipt me-2 text-primary"></i>Sipariş Bilgileri
                    </h5>
                </div>
                <div class="card-body pt-0">
                    <div class="row g-3">
                        <div class="col-md-6">
                            <div class="p-3 bg-light rounded">
                                <small class="text-muted d-block">Sipariş Tarihi</small>
                                <span class="fw-medium">@Model.OrderDate.ToString("dd.MM.yyyy HH:mm")</span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="p-3 bg-light rounded">
                                <small class="text-muted d-block">Durum</small>
                                <span class="badge @GetStatusBadgeClass(Model.Status) rounded-pill px-3 py-1">
                                    @Model.Status
                                </span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="p-3 bg-light rounded">
                                <small class="text-muted d-block">Ödeme Yöntemi</small>
                                <span class="fw-medium">@Model.PaymentMethod</span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="p-3 bg-light rounded">
                                <small class="text-muted d-block">Ödeme Durumu</small>
                                <span class="fw-medium">@Model.PaymentStatus</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Sipariş Özeti Kartı -->
            <div class="card mb-4 border-0 shadow-sm">
                <div class="card-header bg-white border-0 py-3">
                    <h5 class="mb-0 fw-semibold d-flex align-items-center">
                        <i class="fas fa-shopping-basket me-2 text-primary"></i>Sipariş Özeti
                    </h5>
                </div>
                <div class="card-body pt-0">
                    <div class="table-responsive">
                        <table class="table align-middle">
                            <thead class="table-light">
                                <tr>
                                    <th class="ps-3">Ürün</th>
                                    <th class="text-end">Fiyat</th>
                                    <th class="text-center">Adet</th>
                                    <th class="text-end pe-3">Toplam</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.Items)
                                {
                                    <tr>
                                        <td class="ps-3">
                                            <div class="d-flex align-items-center">
                                                <img src="@item.Product.Images" alt="@item.Product.Name" width="60" class="rounded me-3 object-fit-cover" style="height: 60px;">
                                                <div>
                                                    <div class="fw-medium">@item.Product.Name</div>
                                                    @if (item.Variant != null)
                                                    {
                                                        <small class="text-muted">@item.Variant.VariantType</small>
                                                    }
                                                </div>
                                            </div>
                                        </td>
                                        <td class="text-end">@item.UnitPrice.ToString("C")</td>
                                        <td class="text-center">@item.Quantity</td>
                                        <td class="text-end pe-3 fw-medium">@item.TotalPrice.ToString("C")</td>
                                    </tr>
                                }
                            </tbody>
                            <tfoot class="table-light">
                                <tr>
                                    <td colspan="3" class="text-end fw-semibold">Ara Toplam:</td>
                                    <td class="text-end pe-3 fw-semibold">@Model.OrderTotal.ToString("C")</td>
                                </tr>
                                <tr>
                                    <td colspan="3" class="text-end fw-semibold">Kargo Ücreti:</td>
                                    <td class="text-end pe-3 fw-semibold">@Model.ShippingFee.ToString("C")</td>
                                </tr>
                                <tr>
                                    <td colspan="3" class="text-end fw-semibold">Vergi:</td>
                                    <td class="text-end pe-3 fw-semibold">@Model.TaxAmount.ToString("C")</td>
                                </tr>
                                <tr class="border-top">
                                    <td colspan="3" class="text-end fw-bold fs-5">Genel Toplam:</td>
                                    <td class="text-end pe-3 fw-bold fs-5 text-primary">@((Model.OrderTotal + Model.ShippingFee + Model.TaxAmount).ToString("C"))</td>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-4">
            <!-- Teslimat Bilgileri Kartı -->
            <div class="card mb-4 border-0 shadow-sm">
                <div class="card-header bg-white border-0 py-3">
                    <h5 class="mb-0 fw-semibold d-flex align-items-center">
                        <i class="fas fa-truck me-2 text-primary"></i>Teslimat Bilgileri
                    </h5>
                </div>
                <div class="card-body">
                    <div class="p-3 bg-light rounded">
                        @Html.Raw(Model.ShippingAddress.Replace("\n", "<br />"))
                    </div>
                    <div class="mt-3">
                        <button class="btn btn-outline-primary w-100">
                            <i class="fas fa-map-marker-alt me-2"></i>Kargo Takibi
                        </button>
                    </div>
                </div>
            </div>

            <!-- Sipariş Geçmişi Kartı -->
            <div class="card border-0 shadow-sm">
                <div class="card-header bg-white border-0 py-3">
                    <h5 class="mb-0 fw-semibold d-flex align-items-center">
                        <i class="fas fa-history me-2 text-primary"></i>Sipariş Geçmişi
                    </h5>
                </div>
                <div class="card-body p-0">
                    <div class="timeline">
                        @foreach (var history in Model.StatusHistory.OrderByDescending(h => h.ChangedAt))
                        {
                            <div class="timeline-item">
                                <div class="timeline-badge @GetStatusBadgeClass(history.Status)"></div>
                                <div class="timeline-content">
                                    <div class="d-flex justify-content-between">
                                        <span class="badge @GetStatusBadgeClass(history.Status) rounded-pill px-3 py-1 mb-1">
                                            @history.Status
                                        </span>
                                        <small class="text-muted">@history.ChangedAt.ToString("dd.MM.yyyy HH:mm")</small>
                                    </div>
                                    @if (!string.IsNullOrEmpty(history.Notes))
                                    {
                                        <p class="mb-1">@history.Notes</p>
                                    }
                                    <small class="text-muted">
                                        <i class="fas fa-user-circle me-1"></i>@history.ChangedByUser?.UserName
                                    </small>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="mt-4 d-flex justify-content-between">
        <a href="@Url.Action("Index")" class="btn btn-outline-secondary px-4">
            <i class="fas fa-arrow-left me-2"></i>Siparişlerime Dön
        </a>
        <div>
            <button class="btn btn-outline-danger me-2">
                <i class="fas fa-times me-2"></i>İptal Talebi
            </button>
            <button class="btn btn-primary px-4">
                <i class="fas fa-print me-2"></i>Yazdır
            </button>
        </div>
    </div>
</div>

<style>
    /* Özel Timeline Stili */
    .timeline {
        position: relative;
        padding-left: 1.5rem;
    }

    .timeline-item {
        position: relative;
        padding-bottom: 1.5rem;
        padding-left: 1.5rem;
        border-left: 2px solid #e9ecef;
    }

        .timeline-item:last-child {
            padding-bottom: 0;
            border-left: 2px solid transparent;
        }

    .timeline-badge {
        position: absolute;
        left: -10px;
        top: 0;
        width: 20px;
        height: 20px;
        border-radius: 50%;
        border: 3px solid white;
    }

    .timeline-content {
        padding: 0.75rem 1rem;
        background-color: #f8f9fa;
        border-radius: 0.5rem;
        margin-bottom: 1rem;
    }

    /* Text Gradient */
    .text-gradient {
        background: linear-gradient(90deg, #4e73df 0%, #224abe 100%);
        -webkit-background-clip: text;
        background-clip: text;
        -webkit-text-fill-color: transparent;
    }

    /* Kart Gölgeleri */
    .shadow-sm {
        box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075) !important;
    }

    /* Responsive Adjustments */
    @@media (max-width: 767.98px) {
        .d-flex.justify-content-between {
            flex-direction: column;
            gap: 1rem;
        }
    }
</style>

@functions {
    string GetStatusBadgeClass(OrderStatus status)
    {
        return status switch
        {
            OrderStatus.Pending => "bg-secondary",
            OrderStatus.Processing => "bg-info",
            OrderStatus.Shipped => "bg-warning",
            OrderStatus.Delivered => "bg-success",
            OrderStatus.Cancelled => "bg-danger",
            OrderStatus.Refunded => "bg-dark",
            _ => "bg-light"
        };
    }
}